{"version":3,"file":"static/js/639.13c3508b.chunk.js","mappings":"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","sources":["Components/Navbar/Navbar.jsx","Pages/Chatbot/Chatbot.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const activeStyle = ({ isActive }) => {\r\n    return {\r\n      color: isActive ? \"#7a46a8\" : \"#808080\",\r\n      fontWeight: isActive ? \"bold\" : \"400\",\r\n      borderBottom: isActive ? \"2px solid #7a46a8\" : \"\",\r\n    };\r\n  };\r\n  return (\r\n    <nav className=\"navbar w-full\">\r\n      <div className=\"list\">\r\n        <NavLink to=\"/home\" style={activeStyle}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to=\"/Personality_test\" style={activeStyle}>\r\n          Personality Test\r\n        </NavLink>\r\n        <NavLink to=\"/chatbot\" style={activeStyle}>\r\n          ChatBot\r\n        </NavLink>\r\n        <button onClick={() => navigate(\"/cards\")}>Discover Exoplanets</button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useRef, useState } from 'react'\r\nimport './Chatbot.css'\r\nimport Navbar from '../../Components/Navbar/Navbar';\r\nconst Chatbot = () => {\r\n    const botRef = useRef(null);\r\n    const sendRef = useRef(null);\r\n    const typingSound = new Audio(require('../../Assets/audio/light-switch-81967.mp3'));\r\n    const [messages, setMessages] = useState([\r\n        { text: \"ðŸŒŒ Welcome to the SpaceBot! How can I assist you on your cosmic journey?\", sender: \"bot\" }\r\n      ]);\r\n      const [userInput, setUserInput] = useState('');\r\n      const [botAnswer,setBotAnswer]=useState('Exoplanets can be found orbiting other stars in various galaxies beyond our own Milky Way. However, most of the discovered exoplanets are located within the Milky Way galaxy.Source:https://www.nasa.gov/exoplanets Note: The majority of exoplanet discoveries have been made using telescopes and space missions like Kepler, which primarily focused on stars within our own galaxy. ')\r\n     \r\n    const formatMessageWithLinksAndNewLines = (text) => {\r\n        const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        const parts = text.split(urlRegex);\r\n    \r\n        return parts.map((part, index) => {\r\n        if (urlRegex.test(part)) {\r\n            return (\r\n            <React.Fragment key={index}>\r\n                <a\r\n                href={part}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color: 'blue', cursor: 'pointer' }}\r\n                >\r\n                {part}\r\n                </a>\r\n                <br /> \r\n            </React.Fragment>\r\n            );\r\n        } else {\r\n            return part.split('.').map((sentence, sentenceIndex) => (\r\n            <React.Fragment key={`${index}-${sentenceIndex}`}>\r\n                {sentence.trim()}\r\n                {sentenceIndex < part.split('.').length - 1 && '.'} \r\n                {sentenceIndex < part.split('.').length - 1 && <br />} \r\n            </React.Fragment>\r\n            ));\r\n        }\r\n        });\r\n    };\r\n    \r\n \r\n\r\n      const handleSend = () => {\r\n        if (userInput.trim() !== '') {\r\n          if (sendRef.current) { \r\n            sendRef.current.play(); \r\n          }\r\n          const newMessages = [...messages, { text: userInput, sender: \"user\" }];\r\n          setMessages(newMessages);\r\n          setUserInput('');\r\n          setTimeout(() => {\r\n            const botReply = { text:botAnswer, sender: \"bot\" };\r\n            setMessages(prevMessages => [...prevMessages, botReply]);\r\n            if (botRef.current) { \r\n              botRef.current.play(); \r\n            }\r\n          }, 1000);\r\n        }\r\n      };\r\n    \r\n      const handleInputChange = (e) => {\r\n        setUserInput(e.target.value);\r\n        typingSound.play(); // Play the typing sound\r\n    };\r\n\r\n  return (\r\n    <>\r\n     <Navbar/>\r\n    <div className='chatbot-page'>\r\n        <div style={{ position: \"relative\", overflow: \"hidden\" }}>\r\n        <video\r\n          autoPlay\r\n          loop\r\n          muted\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            objectFit: \"cover\",\r\n            zIndex: -1000,\r\n          }}\r\n        >\r\n          <source\r\n            src={require(\"../../Assets/videos/bgvideo.mp4\")}\r\n            type=\"video/mp4\"\r\n          />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n         <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <h2>ðŸš€ SpaceBot</h2>\r\n            </div>\r\n            <div className=\"chat-box\">\r\n                {messages.map((message, index) => (\r\n                <div key={index} className={message.sender === 'bot' ? 'bot-message' : 'user-message'}>\r\n                        <p>\r\n                        {message.sender === 'bot'\r\n                        ? formatMessageWithLinksAndNewLines(message.text)\r\n                        : message.text}\r\n                    </p>\r\n                </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input \r\n                type=\"text\" \r\n                value={userInput} \r\n                onChange={handleInputChange}\r\n                placeholder=\"Type your message...\" \r\n                onKeyDown={(e) => e.key === 'Enter' && handleSend()}\r\n                />\r\n                <button onClick={handleSend}>Send</button>\r\n            </div>\r\n            <audio ref={botRef}>\r\n                <source src={require(\"../../Assets/audio/ding-sound-246413.mp3\")} type=\"audio/mp3\"/>\r\n            </audio>\r\n            <audio ref={sendRef}>\r\n                <source src={require(\"../../Assets/audio/happy-pop-2-185287.mp3\")} type=\"audio/mp3\"/>\r\n            </audio>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Chatbot"],"names":["Navbar","navigate","useNavigate","activeStyle","_ref","isActive","color","fontWeight","borderBottom","_jsx","className","children","_jsxs","NavLink","to","style","onClick","Chatbot","botRef","useRef","sendRef","typingSound","Audio","require","messages","setMessages","useState","text","sender","userInput","setUserInput","botAnswer","setBotAnswer","formatMessageWithLinksAndNewLines","urlRegex","split","map","part","index","test","React","href","target","rel","cursor","sentence","sentenceIndex","trim","length","handleSend","current","play","newMessages","setTimeout","botReply","prevMessages","_Fragment","position","overflow","autoPlay","loop","muted","top","left","width","height","objectFit","zIndex","src","type","message","value","onChange","e","placeholder","onKeyDown","key","ref"],"sourceRoot":""}